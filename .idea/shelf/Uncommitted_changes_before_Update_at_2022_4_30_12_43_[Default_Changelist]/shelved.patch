Index: app/src/main/java/com/example/letseat/EditProfile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.letseat;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.Activity;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Typeface;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.example.letseat.TwitterAPI.TwitterAPI;\r\nimport com.example.letseat.optionsPage.FavoriteFoodCuisine;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n/*\r\nimport com.twitter.sdk.android.core.Callback;\r\nimport com.twitter.sdk.android.core.DefaultLogger;\r\nimport com.twitter.sdk.android.core.Result;\r\nimport com.twitter.sdk.android.core.Twitter;\r\nimport com.twitter.sdk.android.core.TwitterApiClient;\r\nimport com.twitter.sdk.android.core.TwitterAuthConfig;\r\nimport com.twitter.sdk.android.core.TwitterAuthToken;\r\nimport com.twitter.sdk.android.core.TwitterConfig;\r\nimport com.twitter.sdk.android.core.TwitterCore;\r\nimport com.twitter.sdk.android.core.TwitterException;\r\nimport com.twitter.sdk.android.core.TwitterSession;\r\nimport com.twitter.sdk.android.core.identity.TwitterLoginButton;\r\nimport com.twitter.sdk.android.core.models.User;\r\nimport com.twitter.sdk.android.core.services.AccountService;\r\n*/\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport retrofit2.Call;\r\n\r\n\r\npublic class EditProfile extends AppCompatActivity implements AdapterView.OnItemSelectedListener{\r\n    private EditText profileFullName,profileEmail,profilePhone;\r\n    private ImageView profileImageView, backBtn;\r\n    private final int SAVE=1,RESET_PASSWORD=2,LOGOUT=3;\r\n    private final float textSize = 30.0f;\r\n    private Spinner spinner, preferTime, major;\r\n    private TextView favoriteFood;\r\n    private FirebaseAuth fAuth;\r\n    private FirebaseFirestore fStore;\r\n    private String fullName, email, phone, food, time, user_major;\r\n    private FirebaseUser user;\r\n    private StorageReference storageReference;\r\n   // private TwitterLoginButton loginButton;\r\n\r\n    @Override\r\n\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n\r\n        super.onCreate(savedInstanceState);\r\n        //initTwitter();\r\n        setContentView(R.layout.activity_edit_profile);\r\n\r\n\r\n       // twitterButton();\r\n\r\n\r\n        Intent data = getIntent();\r\n        fullName = data.getStringExtra(\"fullName\");\r\n        email = data.getStringExtra(\"email\");\r\n        phone = data.getStringExtra(\"phone\");\r\n        food = data.getStringExtra(\"favoriteFood\");\r\n        user_major = data.getStringExtra(\"major\");\r\n        time = data.getStringExtra(\"preferTime\");\r\n\r\n        /*\r\n        FirebaseAuth is what we used to sign in users to our Firebase app\r\n        https://firebase.google.com/docs/reference/android/com/google/firebase/auth/FirebaseAuth\r\n         */\r\n        fAuth = FirebaseAuth.getInstance();\r\n        /*\r\n        Firestore database and is the entry point for all Cloud Firestore operations.\r\n        https://firebase.google.com/docs/reference/android/com/google/firebase/firestore/FirebaseFirestore#:~:text=Inherited%20Method%20Summary-,Public%20Methods,for%20all%20Cloud%20Firestore%20operations.\r\n         */\r\n        fStore = FirebaseFirestore.getInstance();\r\n        /*\r\n        get user\r\n         */\r\n        user = fAuth.getCurrentUser();\r\n        /*\r\n        Creates a new StorageReference initialized at the root Firebase Storage location.\r\n        More details: https://firebase.google.com/docs/reference/android/com/google/firebase/storage/FirebaseStorage#getReference()\r\n         */\r\n        storageReference = FirebaseStorage.getInstance().getReference();\r\n\r\n        /*\r\n        Bind fields to views\r\n         */\r\n\r\n        profileFullName = new EditText(this);\r\n        profileEmail = new EditText(this);\r\n        profilePhone = new EditText(this);\r\n        favoriteFood = new TextView(this);\r\n        //favoriteFood = new Spinner(this);\r\n\r\n        //create a list of items for the spinner.\r\n\r\n\r\n        major = new Spinner(this);\r\n        String[] items_major = new String[]{\"Computer Science\", \"Political Science\", \"Film/TV\", \"Business\"};\r\n        ArrayAdapter<String> adapter_majors = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item, items_major);\r\n        major.setAdapter(adapter_majors);\r\n        for (int i = 0; i < items_major.length; i++) {\r\n            if(items_major[i].equals(user_major)){\r\n                Log.d(\"creation\", items_major[i]);\r\n                major.setSelection(i);\r\n                break;\r\n            }\r\n        }\r\n        major.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                user_major = items_major[i];\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n        preferTime = new Spinner(this);\r\n        String[] items_time = new String[]{\"Breakfast\", \"Lunch\", \"Dinner\"};\r\n        ArrayAdapter<String> adapter_time = new ArrayAdapter<>(this, android.R.layout.simple_spinner_dropdown_item, items_time);\r\n        preferTime.setAdapter(adapter_time);\r\n        for (int i = 0; i < items_time.length; i++) {\r\n            if(items_time[i].equals(time)){\r\n                preferTime.setSelection(i);\r\n                break;\r\n            }\r\n        }\r\n        //preferTime.setSelection(sharedPref.getInt(\"times\",0));\r\n        preferTime.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                time = items_time[i];\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n        //This makes every text input field can escape with enter key\r\n        EditText[] editTextManager = {profileFullName, profileEmail, profilePhone};\r\n        for (int i = 0; i < editTextManager.length; i++) {\r\n            editTextManager[i].setSingleLine();\r\n            editTextManager[i].setImeOptions(EditorInfo.IME_ACTION_DONE);\r\n        }\r\n        //Programmatically creating views for name, phone, email, and etc.\r\n        ScrollView scrollView = new ScrollView(this);\r\n        LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\r\n        scrollView.setLayoutParams(layoutParams);\r\n        LinearLayout linearLayout = new LinearLayout(this);\r\n        LinearLayout.LayoutParams linearParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n        linearLayout.setOrientation(LinearLayout.VERTICAL);\r\n        linearLayout.setLayoutParams(linearParams);\r\n        scrollView.addView(linearLayout);\r\n\r\n        //Set layout parameters for the input field\r\n        LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n        params.setMargins(20,0,20, 40);\r\n\r\n        LinearLayout.LayoutParams params1 = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n        params1.setMargins(20,0,20, 0);\r\n\r\n        LinearLayout.LayoutParams params2 = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n        params2.setMargins(20,0,20, 40);\r\n\r\n        //name section\r\n        TextView tv0 = new TextView(this);\r\n        tv0.setText(R.string.user_name);\r\n        tv0.setTypeface(null, Typeface.BOLD);\r\n        tv0.setTextColor(getResources().getColor(R.color.white));\r\n        tv0.setLayoutParams(params1);\r\n        linearLayout.addView(tv0);\r\n        linearLayout.addView(profileFullName);\r\n        profileFullName.setBackground(getResources().getDrawable(R.drawable.round_back_white_10));\r\n        profileFullName.setMaxLines(1);\r\n        profileFullName.setLayoutParams(params);\r\n\r\n        //Email section\r\n        TextView tv1 = new TextView(this);\r\n        tv1.setText(R.string.user_email);\r\n        tv1.setTypeface(null, Typeface.BOLD);\r\n        tv1.setTextColor(getResources().getColor(R.color.white));\r\n        tv1.setLayoutParams(params1);\r\n        linearLayout.addView(tv1);\r\n        linearLayout.addView(profileEmail);\r\n        profileEmail.setBackground(getResources().getDrawable(R.drawable.round_back_white_10));\r\n        profileEmail.setMaxLines(1);\r\n        profileEmail.setLayoutParams(params);\r\n\r\n        //Number section\r\n        TextView tv2 = new TextView(this);\r\n        tv2.setText(R.string.user_phone);\r\n        tv2.setTypeface(null, Typeface.BOLD);\r\n        tv2.setTextColor(getResources().getColor(R.color.white));\r\n        tv2.setLayoutParams(params1);\r\n        linearLayout.addView(tv2);\r\n        linearLayout.addView(profilePhone);\r\n        profilePhone.setBackground(getResources().getDrawable(R.drawable.round_back_white_10));\r\n        profilePhone.setMaxLines(1);\r\n        profilePhone.setLayoutParams(params);\r\n\r\n        //Food section\r\n        TextView tv3 = new TextView(this);\r\n        tv3.setText(R.string.user_food);\r\n        tv3.setTypeface(null, Typeface.BOLD);\r\n        tv3.setTextColor(getResources().getColor(R.color.white));\r\n        tv3.setLayoutParams(params1);\r\n        linearLayout.addView(tv3);\r\n        linearLayout.addView(favoriteFood);\r\n        favoriteFood.setBackground(getResources().getDrawable(R.drawable.round_back_white_10));\r\n        favoriteFood.setText(food);\r\n        favoriteFood.setTextSize(textSize);\r\n        favoriteFood.setTextColor(getResources().getColor(R.color.black));\r\n        favoriteFood.setLayoutParams(params);\r\n\r\n        //Major section\r\n        TextView tv4 = new TextView(this);\r\n        tv4.setText(R.string.user_major);\r\n        tv4.setTypeface(null, Typeface.BOLD);\r\n        tv4.setTextColor(getResources().getColor(R.color.white));\r\n        tv4.setLayoutParams(params1);\r\n        linearLayout.addView(tv4);\r\n        linearLayout.addView(major);\r\n        major.setBackground(getResources().getDrawable(R.drawable.round_back_white_10));\r\n        major.setLayoutParams(params);\r\n\r\n        //Time section\r\n        TextView tv5 = new TextView(this);\r\n        tv5.setText(R.string.user_pref_time);\r\n        tv5.setTypeface(null, Typeface.BOLD);\r\n        tv5.setTextColor(getResources().getColor(R.color.white));\r\n        tv5.setLayoutParams(params1);\r\n        linearLayout.addView(tv5);\r\n        linearLayout.addView(preferTime);\r\n        preferTime.setBackground(getResources().getDrawable(R.drawable.round_back_white_10));\r\n        preferTime.setLayoutParams(params);\r\n\r\n\r\n        //add scrollable view into rootContainer\r\n        LinearLayout linear = findViewById(R.id.rootContainer);\r\n        linear.addView(scrollView);\r\n\r\n\r\n        profileImageView = findViewById(R.id.profileImageView);\r\n        backBtn = findViewById(R.id.backBtn);\r\n        spinner = findViewById(R.id.spinner);\r\n        spinner.setBackground(getResources().getDrawable(R.drawable.round_back_white_10));\r\n        spinner.setOnItemSelectedListener(this);\r\n        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,\r\n                R.array.editProfileOptions, android.R.layout.simple_spinner_item);\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinner.setAdapter(adapter);\r\n\r\n\r\n        /*\r\n        StorageReference represents a reference to a Google Cloud Storage object.\r\n        Developers can upload and download objects, get/set object metadata,\r\n        and delete an object at a specified path.\r\n\r\n        More detail please refer to example illustration in Register.java\r\n         */\r\n        StorageReference profileRef = storageReference.child(\"users/\"+fAuth.getCurrentUser().getUid()+\"profile.jpg\");\r\n        profileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n            @Override\r\n            public void onSuccess(Uri uri) {\r\n                Picasso.get().load(uri).into(profileImageView);\r\n            }\r\n        });\r\n\r\n        profileImageView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent openGalleryIntent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(openGalleryIntent,1000);\r\n            }\r\n        });\r\n        favoriteFood.setOnClickListener(view -> {\r\n            Intent foodOptionsIntent = new Intent(view.getContext(), FavoriteFoodCuisine.class);\r\n            foodOptionsIntent.putExtra(\"fullName\", fullName );\r\n            foodOptionsIntent.putExtra(\"email\", email);\r\n            foodOptionsIntent.putExtra(\"phone\", phone);\r\n            foodOptionsIntent.putExtra(\"favoriteFood\", food);\r\n            foodOptionsIntent.putExtra(\"major\", user_major);\r\n            foodOptionsIntent.putExtra(\"preferTime\", time);\r\n            startActivity(foodOptionsIntent);\r\n            finish();\r\n        });\r\n\r\n        backBtn.setOnClickListener(view -> {\r\n            finish();\r\n        });\r\n        profileEmail.setText(email);\r\n        profileFullName.setText(fullName);\r\n        profilePhone.setText(phone);\r\n        //int positionFood = adapter_cuisines.getPosition(food);\r\n       // favoriteFood.setSelection(positionFood);\r\n        //int positionMajor = adapter_majors.getPosition(user_major);\r\n      //  major.setSelection(positionMajor);\r\n        //int positionTime = adapter_time.getPosition(time);\r\n      //  preferTime.setSelection(positionTime);\r\n\r\n    }\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @androidx.annotation.Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if(requestCode == 1000){\r\n            if(resultCode == Activity.RESULT_OK){\r\n                Uri imageUri = data.getData();\r\n\r\n                //profileImage.setImageURI(imageUri);\r\n\r\n                uploadImageToFirebase(imageUri);\r\n\r\n\r\n            }\r\n        }\r\n        // Pass the activity result to the login button.\r\n        /*\r\n        if(loginButton!=null) {\r\n            loginButton.onActivityResult(requestCode, resultCode, data);\r\n        } */\r\n\r\n    }\r\n    private void uploadImageToFirebase(Uri imageUri) {\r\n        // upload image to firebase storage\r\n        final StorageReference fileRef = storageReference.child(\"users/\"+fAuth.getCurrentUser().getUid()+\"/profile.jpg\");\r\n        fileRef.putFile(imageUri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n            @Override\r\n            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                fileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                    @Override\r\n                    public void onSuccess(Uri uri) {\r\n                        Picasso.get().load(uri).into(profileImageView);\r\n                    }\r\n                });\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Toast.makeText(getApplicationContext(), e.toString(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n        if(i == LOGOUT){\r\n            FirebaseAuth.getInstance().signOut();\r\n            startActivity(new Intent(getApplicationContext(),Login.class));\r\n            finish();\r\n        }\r\n        if(i == SAVE){\r\n            if(profileFullName.getText().toString().isEmpty() || profileEmail.getText().toString().isEmpty() || profilePhone.getText().toString().isEmpty()){\r\n                Toast.makeText(EditProfile.this, \"one or many field are empty\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n            Toast.makeText(EditProfile.this, \"Loading\", Toast.LENGTH_SHORT).show();\r\n            final String email = profileEmail.getText().toString();\r\n            user.updateEmail(email).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                @Override\r\n                public void onSuccess(Void unused) {\r\n                    DocumentReference docRef = fStore.collection(\"users\").document(user.getUid());\r\n                    Map<String,Object> edited = new HashMap<>();\r\n                    edited.put(\"email\",email);\r\n                    edited.put(\"fName\",(Object) profileFullName.getText().toString());\r\n                    edited.put(\"phone\",(Object) profilePhone.getText().toString());\r\n                    // store other information\r\n                    edited.put(\"favoriteFood\",(Object) food);\r\n                    edited.put(\"major\",(Object) user_major);\r\n                    edited.put(\"preferTime\",(Object) time);\r\n                    docRef.update(edited);\r\n                    Toast.makeText(EditProfile.this, \"Profile Updated\", Toast.LENGTH_SHORT).show();\r\n                    startActivity(new Intent(getApplicationContext(),MainActivity.class));\r\n                    finish();\r\n                }\r\n            }).addOnFailureListener(new OnFailureListener() {\r\n                @Override\r\n                public void onFailure(@NonNull Exception e) {\r\n                    Toast.makeText(EditProfile.this, e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }\r\n        if(i==RESET_PASSWORD){\r\n            final EditText resetPassword = new EditText(view.getContext());\r\n            final AlertDialog.Builder passwordResetDialog = new AlertDialog.Builder(view.getContext());\r\n            passwordResetDialog.setTitle(\"Reset Password ?\");\r\n            passwordResetDialog.setMessage(\"Enter New Password > 6 Characters long.\");\r\n            passwordResetDialog.setView(resetPassword);\r\n\r\n\r\n            passwordResetDialog.setPositiveButton(\"yes\", new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialogInterface, int which) {\r\n                    String newPassword = resetPassword.getText().toString();\r\n                    user.updatePassword(newPassword).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                        @Override\r\n                        public void onSuccess(Void aVoid) {\r\n                            Toast.makeText(EditProfile.this, \"Password reset successfully\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }).addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            Toast.makeText(EditProfile.this, \"Password reset failed\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n            passwordResetDialog.setNegativeButton(\"no\", new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialogInterface, int i) {\r\n                    //\r\n                }\r\n            });\r\n            passwordResetDialog.create().show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n    }\r\n\r\n//    init twitter\r\n    /*\r\n    private void initTwitter() {\r\n        String key = getString(R.string.twitter_consumer_key);\r\n        String secret = getString(R.string.twitter_consumer_secret);\r\n\r\n        TwitterConfig config = new TwitterConfig.Builder(this)\r\n                .logger(new DefaultLogger(Log.DEBUG))\r\n                .twitterAuthConfig(new TwitterAuthConfig(key, secret))\r\n                .debug(true)\r\n                .build();\r\n        Twitter.initialize(config);\r\n    }\r\n\r\n    private void twitterButton () {\r\n        loginButton = (TwitterLoginButton) findViewById(R.id.login_button);\r\n        loginButton.setCallback(new Callback<TwitterSession>() {\r\n            @Override\r\n            public void success(Result<TwitterSession> result) {\r\n                // Do something with result, which provides a TwitterSession for making API calls\r\n                // result里面包含了用户的信息，我们可以从中取出token，tokenSecret\r\n                // 如果我们有自己的后台服务器，发送这两个到我们自己的后台，后台再去验证）\r\n                TwitterAuthToken authToken = result.data.getAuthToken();\r\n\r\n                String token = authToken.token;\r\n                String tokenSecret = authToken.secret;\r\n                String userName = result.data.getUserName();\r\n                String userId = result.data.getUserId()+\"\";\r\n\r\n                Log.d(\"TEST\",\"Token: \" + token);\r\n                Log.d(\"TEST\",\"Secret: \" + tokenSecret);\r\n                Log.d(\"TEST\",\"UserName: \" + userName);\r\n                Log.d(\"TEST\",\"UserId: \"+userId);\r\n\r\n                storeFollowing(userId);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void failure(TwitterException exception) { // Do something on failure\r\n                exception.printStackTrace();\r\n            }\r\n        });\r\n    }\r\n*/\r\n    public void storeFollowing (String userId) {\r\n        FirebaseAuth fAuth = FirebaseAuth.getInstance();;\r\n        FirebaseFirestore fStore = FirebaseFirestore.getInstance();\r\n        String uid = fAuth.getCurrentUser().getUid();\r\n        ArrayList<String> followingList = new ArrayList<>();\r\n        //TwitterAPI.searchFollowingRequestById(userId, followingList, EditProfile.this);\r\n        String path = \"https://api.twitter.com/2/users/\" + userId + \"/following\";\r\n        // Following request returns a list of user's following accounts given the user's ID.\r\n        StringRequest followingRequest = new StringRequest(Request.Method.GET, path, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                try {\r\n                    JSONObject result = new JSONObject(response);\r\n                    JSONArray array = result.getJSONArray(\"data\");\r\n                    followingList.clear();\r\n                    for (int i = 0; i < array.length(); i++){\r\n                        followingList.add(array.getJSONObject(i).getString(\"name\"));\r\n                    }\r\n//                    Map<String, Object> map = new HashMap<>();\r\n//                    map.put(\"Followings\",followingList);\r\n//                    Log.d(\"CREATION\", \"ARRAY: \" + followingList);\r\n//                    fStore.collection(\"users\").document(user.getUid()).add(map).addOnSuccessListener(new OnSuccessListener() {\r\n//                        @Override\r\n//                        public void onSuccess(Object o) {\r\n//                            Log.d(\"TAG\", \"OnSuccess: a new post being created\" + userId);\r\n//                        }\r\n//                    });\r\n                    DocumentReference docRef = fStore.collection(\"users\").document(user.getUid());\r\n                    Map<String,Object> edited = new HashMap<>();\r\n//                    edited.put(\"email\",email);\r\n//                    edited.put(\"fName\",(Object) profileFullName.getText().toString());\r\n//                    edited.put(\"phone\",(Object) profilePhone.getText().toString());\r\n//                    // store other information\r\n//                    edited.put(\"favoriteFood\",(Object) food);\r\n//                    edited.put(\"major\",(Object) user_major);\r\n//                    edited.put(\"preferTime\",(Object) time);\r\n                    edited.put(\"followings\", followingList);\r\n                    docRef.update(edited);\r\n                } catch (JSONException e) {\r\n                    Log.d(\"Response\", e.getMessage()); //debug purpose\r\n                }\r\n            }\r\n        }, new Response.ErrorListener() {\r\n            @Override\r\n            public void onErrorResponse(VolleyError error) {\r\n                Log.d(\"Response\", \"No REsponding (\"); //debug purpose\r\n            }\r\n\r\n        }){\r\n            // Add authorization token to our request\r\n            public Map<String, String> getHeaders(){\r\n                HashMap<String, String> params = new HashMap<>();\r\n\r\n                params.put(\"Authorization\", \"Bearer AAAAAAAAAAAAAAAAAAAAADpcbAEAAAAAHSn7%2BNKeGBspyjD%2Fft4TEKCqrro%3Dvr9oJ1uIII8CMyT4p6qjRFvkTPKetxSZ0R4yWZdFvdyMFdoO06\");\r\n\r\n                return params;\r\n            }\r\n        };\r\n        // Put request into a request queue\r\n        Volley.newRequestQueue(this).add(followingRequest);\r\n\r\n\r\n    }\r\n// fetch userinfo from Twitter\r\n//    private void twitterUserInfo() {\r\n//\r\n//        final TwitterSession activeSession = TwitterCore.getInstance().getSessionManager().getActiveSession();\r\n//\r\n//        if (activeSession == null) {\r\n//            String message = \"User haven't loged in\";\r\n//            Toast.makeText(this,message,Toast.LENGTH_SHORT).show();\r\n//            return;\r\n//        }\r\n//        TwitterApiClient client = new TwitterApiClient(activeSession);\r\n//        AccountService accountService = client.getAccountService();\r\n//        Call<User> show = accountService.verifyCredentials(false, false, true);\r\n//        show.enqueue(new Callback<User>() {\r\n//            @Override\r\n//            public void success(Result<User> result) {\r\n//                User data = result.data;\r\n//                String profileImageUrl = data.profileImageUrl.replace(\"_normal\", \"\");\r\n//                String idStr = data.idStr;\r\n//                String name = data.name;\r\n//                String email = data.email;\r\n//                String description = data.description;\r\n//\r\n//                Log.i(\"profileImageUrl\", profileImageUrl);\r\n//                Log.i(\"idStr\", idStr);\r\n//                Log.i(\"name\", name);\r\n//\r\n//                Log.i(\"email\", email);\r\n//\r\n//                Log.i(\"description\", description);\r\n//\r\n//                String message = \"userName = \"+name+\"\\t\"+\"idStr = \"+idStr+\"\\t\"+\"email = \"+email;\r\n//\r\n//                ArrayList<String> list = TwitterAPI.searchFollowings(name,EditProfile.this);\r\n//                FirebaseAuth fAuth = FirebaseAuth.getInstance();;\r\n//                FirebaseFirestore fStore = FirebaseFirestore.getInstance();\r\n//                String userId = fAuth.getCurrentUser().getUid();\r\n//                fStore.collection(\"followings\").add(list).addOnSuccessListener(new OnSuccessListener() {\r\n//                    @Override\r\n//                    public void onSuccess(Object o) {\r\n//                        Log.d(\"Post\", \"OnSuccess: a new post being created\" + userId);\r\n//                    }\r\n//                });\r\n//\r\n//            }\r\n//\r\n//            @Override\r\n//            public void failure(TwitterException exception) {\r\n//                exception.printStackTrace();\r\n//            }\r\n//        });\r\n//    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/letseat/EditProfile.java b/app/src/main/java/com/example/letseat/EditProfile.java
--- a/app/src/main/java/com/example/letseat/EditProfile.java	(revision 1c8e4b3fef6b0814243410f4ca27774f21e5e90e)
+++ b/app/src/main/java/com/example/letseat/EditProfile.java	(date 1650995592349)
@@ -44,22 +44,18 @@
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.google.firebase.storage.FirebaseStorage;
 import com.google.firebase.storage.StorageReference;
-/*
 import com.twitter.sdk.android.core.Callback;
 import com.twitter.sdk.android.core.DefaultLogger;
 import com.twitter.sdk.android.core.Result;
 import com.twitter.sdk.android.core.Twitter;
-import com.twitter.sdk.android.core.TwitterApiClient;
 import com.twitter.sdk.android.core.TwitterAuthConfig;
 import com.twitter.sdk.android.core.TwitterAuthToken;
 import com.twitter.sdk.android.core.TwitterConfig;
-import com.twitter.sdk.android.core.TwitterCore;
 import com.twitter.sdk.android.core.TwitterException;
 import com.twitter.sdk.android.core.TwitterSession;
 import com.twitter.sdk.android.core.identity.TwitterLoginButton;
-import com.twitter.sdk.android.core.models.User;
-import com.twitter.sdk.android.core.services.AccountService;
-*/
+
+
 import org.json.JSONArray;
 import org.json.JSONException;
 import org.json.JSONObject;
@@ -83,19 +79,18 @@
     private String fullName, email, phone, food, time, user_major;
     private FirebaseUser user;
     private StorageReference storageReference;
-   // private TwitterLoginButton loginButton;
+    private TwitterLoginButton loginButton;
 
     @Override
 
     protected void onCreate(Bundle savedInstanceState) {
 
         super.onCreate(savedInstanceState);
-        //initTwitter();
+        initTwitter();
+        twitterButton();
         setContentView(R.layout.activity_edit_profile);
 
 
-       // twitterButton();
-
 
         Intent data = getIntent();
         fullName = data.getStringExtra("fullName");
@@ -364,10 +359,10 @@
             }
         }
         // Pass the activity result to the login button.
-        /*
+
         if(loginButton!=null) {
             loginButton.onActivityResult(requestCode, resultCode, data);
-        } */
+        }
 
     }
     private void uploadImageToFirebase(Uri imageUri) {
@@ -471,7 +466,7 @@
     }
 
 //    init twitter
-    /*
+
     private void initTwitter() {
         String key = getString(R.string.twitter_consumer_key);
         String secret = getString(R.string.twitter_consumer_secret);
@@ -499,12 +494,10 @@
                 String userName = result.data.getUserName();
                 String userId = result.data.getUserId()+"";
 
-                Log.d("TEST","Token: " + token);
-                Log.d("TEST","Secret: " + tokenSecret);
-                Log.d("TEST","UserName: " + userName);
-                Log.d("TEST","UserId: "+userId);
-
-                storeFollowing(userId);
+                Log.i("token",token);
+                Log.i("tokenSecret",tokenSecret);
+                Log.i("userName",userName);
+                Log.i("userId",userId);
 
             }
 
@@ -514,7 +507,7 @@
             }
         });
     }
-*/
+
     public void storeFollowing (String userId) {
         FirebaseAuth fAuth = FirebaseAuth.getInstance();;
         FirebaseFirestore fStore = FirebaseFirestore.getInstance();
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nbuildscript {\r\n    repositories {\r\n        // Check that you have the following line (if not, add it):\r\n        google()  // Google's Maven repository\r\n\r\n    }\r\n    dependencies {\r\n        // Add this line\r\n        classpath 'com.google.gms:google-services:4.3.10'\r\n\r\n    }\r\n}// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\n    id 'com.android.application' version '7.1.0' apply false\r\n    id 'com.android.library' version '7.1.0' apply false\r\n    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin' version '2.0.1' apply false\r\n}\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 1c8e4b3fef6b0814243410f4ca27774f21e5e90e)
+++ b/build.gradle	(date 1650994606303)
@@ -4,6 +4,8 @@
         // Check that you have the following line (if not, add it):
         google()  // Google's Maven repository
 
+        jcenter()
+
     }
     dependencies {
         // Add this line
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>buildscript {\r\n    repositories {\r\n        // Check that you have the following line (if not, add it):\r\n        google()  // Google's Maven repository\r\n        // for twitter log in\r\n        //undefined\r\n        mavenCentral()\r\n        maven { url 'https://maven.fabric.io/public' }\r\n\r\n    }\r\n    dependencies {\r\n        // Add this line\r\n        classpath 'com.google.gms:google-services:4.3.10'\r\n    }\r\n}\r\n\r\nplugins {\r\n    id 'com.android.application'\r\n    id 'com.google.gms.google-services'\r\n    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'\r\n}\r\n\r\nandroid {\r\n    compileSdk 32\r\n\r\n    sourceSets {\r\n        main {\r\n            assets.srcDirs = ['src/main/assets', 'src/main/assets/']\r\n        }\r\n    }\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.letseat\"\r\n        minSdk 22\r\n        targetSdk 32\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    dataBinding {\r\n        enabled = true\r\n    }\r\n\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    //Sendbird SDK\r\n    implementation 'com.sendbird.sdk:uikit:2.2.4'\r\n    implementation 'com.sendbird.sdk:sendbird-android-sdk:3.1.7'\r\n    //Mindorks Library\r\n    //Github link: https://github.com/janishar/PlaceHolderView\r\n    implementation 'com.mindorks:placeholderview:0.7.1'\r\n\r\n\r\n\r\n    // Import the BoM for the Firebase platform\r\n    implementation platform('com.google.firebase:firebase-bom:29.3.0')\r\n\r\n    // Declare the dependency for the Firebase Authentication library\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n    implementation 'com.google.firebase:firebase-auth'\r\n\r\n    // Also declare the dependency for the Google Play services library and specify its version\r\n    implementation 'com.google.android.gms:play-services-auth:20.1.0'\r\n    implementation 'androidx.appcompat:appcompat:1.4.1'\r\n    implementation 'com.google.android.material:material:1.5.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'\r\n    //firebase\r\n    implementation 'com.google.firebase:firebase-auth:21.0.1'\r\n    implementation 'com.google.firebase:firebase-storage:20.0.0'\r\n    implementation 'com.google.firebase:firebase-messaging:15.0.2'\r\n    //firebase\r\n    implementation platform('com.google.firebase:firebase-bom:29.3.0')\r\n    implementation 'com.google.firebase:firebase-core:9.6.1'\r\n    implementation 'com.google.firebase:firebase-database'\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    //circle image view, here is the git: https://github.com/hdodenhof/CircleImageView\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    //Picasso dependancy, here is the git: https://github.com/square/picasso\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'com.google.firebase:firebase-firestore:24.1.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.android.libraries.places:places:2.4.0'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n\r\n    // Retrofit\r\n    implementation 'com.google.code.gson:gson:2.8.7'\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n\r\n    // Volley\r\n    implementation 'com.android.volley:volley:1.2.1'\r\n\r\n    // for twitter login\r\n    implementation 'com.twitter.sdk.android:twitter-core:3.3.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision 1c8e4b3fef6b0814243410f4ca27774f21e5e90e)
+++ b/app/build.gradle	(date 1650994682267)
@@ -114,4 +114,6 @@
 
     // for twitter login
     implementation 'com.twitter.sdk.android:twitter-core:3.3.0'
+
+    implementation 'com.twitter.sdk.android:twitter-core:3.1.1'
 }
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable-v24/green_indictor_light.xml\" value=\"0.1775\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.1985\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/backbtn.xml\" value=\"0.1985\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/circularbtn.xml\" value=\"0.1985\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/ic_launcher_background.xml\" value=\"0.1985\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/indictor_light.xml\" value=\"0.1775\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/my_msg_back.xml\" value=\"0.1985\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/opo_msg_back.xml\" value=\"0.137\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/refresh.xml\" value=\"0.1985\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/round_back_light_10.xml\" value=\"0.137\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/round_back_theme.xml\" value=\"0.137\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/round_back_white_10.xml\" value=\"0.137\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/search_icon.xml\" value=\"0.137\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/layout/activity_chat.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/layout/activity_edit_profile.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/layout/activity_favorite_food_cuisine.xml\" value=\"0.3161231884057971\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/layout/activity_login.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/layout/activity_main.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/layout/activity_post.xml\" value=\"0.3161231884057971\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/layout/activity_register.xml\" value=\"0.15208333333333332\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/layout/activity_restaurant_search.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/layout/activity_user_pref.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"..\\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/layout/restaurant_adapter_layout.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"..\\:/Users/dhkro/Desktop/cs501/LetsEat/app/src/main/res/layout/activity_edit_profile.xml\" value=\"0.22826086956521738\" />\r\n        <entry key=\"..\\:/Users/dhkro/Desktop/cs501/LetsEat/app/src/main/res/layout/activity_main.xml\" value=\"0.22826086956521738\" />\r\n        <entry key=\"..\\:/cs501/LetsEat/app/src/main/res/layout/activity_chat.xml\" value=\"0.19166666666666668\" />\r\n        <entry key=\"..\\:/cs501/LetsEat/app/src/main/res/layout/activity_edit_profile.xml\" value=\"0.19166666666666668\" />\r\n        <entry key=\"..\\:/cs501/LetsEat/app/src/main/res/layout/activity_friends.xml\" value=\"0.358695652173913\" />\r\n        <entry key=\"..\\:/cs501/LetsEat/app/src/main/res/layout/activity_main.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/cs501/LetsEat/app/src/main/res/layout/activity_register.xml\" value=\"0.19166666666666668\" />\r\n        <entry key=\"..\\:/cs501/LetsEat/app/src/main/res/layout/activity_user_pref.xml\" value=\"0.19166666666666668\" />\r\n        <entry key=\"..\\:/cs501/LetsEat/app/src/main/res/layout/friend_adapter_layout.xml\" value=\"0.19166666666666668\" />\r\n        <entry key=\"app/src/main/res/layout/activity_chat.xml\" value=\"0.2\" />\r\n        <entry key=\"app/src/main/res/layout/activity_edit_profile.xml\" value=\"0.22056159420289856\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.22056159420289856\" />\r\n        <entry key=\"app/src/main/res/layout/activity_main.xml\" value=\"0.29404754638671876\" />\r\n        <entry key=\"app/src/main/res/layout/activity_post.xml\" value=\"0.3134057971014493\" />\r\n        <entry key=\"app/src/main/res/layout/activity_register.xml\" value=\"0.22056159420289856\" />\r\n        <entry key=\"app/src/main/res/layout/activity_user_pref.xml\" value=\"0.22056159420289856\" />\r\n        <entry key=\"app/src/main/res/layout/adapter_request_card.xml\" value=\"0.3561854044596354\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_request.xml\" value=\"0.32546081542968763\" />\r\n        <entry key=\"app/src/main/res/layout/friend_adapter_layout.xml\" value=\"0.22056159420289856\" />\r\n        <entry key=\"app/src/main/res/layout/restaurant_adapter_layout.xml\" value=\"0.22056159420289856\" />\r\n        <entry key=\"app/src/main/res/layout/test.xml\" value=\"0.27722663326539865\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 1c8e4b3fef6b0814243410f4ca27774f21e5e90e)
+++ b/.idea/misc.xml	(date 1650993961081)
@@ -3,6 +3,7 @@
   <component name="DesignSurface">
     <option name="filePathToZoomLevelMap">
       <map>
+        <entry key="..\:/Users/Epoch/AndroidStudioProjects/LetsEat/app/src/main/res/layout/activity_edit_profile.xml" value="0.1" />
         <entry key="..\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable-v24/green_indictor_light.xml" value="0.1775" />
         <entry key="..\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable-v24/ic_launcher_foreground.xml" value="0.1985" />
         <entry key="..\:/Users/Haowei Li/AndroidStudioProjects/LetsEat/app/src/main/res/drawable/backbtn.xml" value="0.1985" />
